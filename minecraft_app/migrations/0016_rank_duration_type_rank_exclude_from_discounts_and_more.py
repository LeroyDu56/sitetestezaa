# Generated by Django 4.2.7 on 2025-05-27 12:49

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('minecraft_app', '0015_alter_townyserver_version'),
    ]

    operations = [
        migrations.AddField(
            model_name='rank',
            name='duration_type',
            field=models.CharField(choices=[('lifetime', 'À vie'), ('monthly', 'Mensuel')], default='lifetime', help_text='Type de durée du grade', max_length=10),
        ),
        migrations.AddField(
            model_name='rank',
            name='exclude_from_discounts',
            field=models.BooleanField(default=False, help_text="Exclure ce grade des réductions basées sur d'autres grades"),
        ),
        migrations.CreateModel(
            name='UserSubscription',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('stripe_subscription_id', models.CharField(blank=True, max_length=100, null=True, unique=True)),
                ('status', models.CharField(choices=[('active', 'Active'), ('cancelled', 'Annulée'), ('expired', 'Expirée'), ('pending', 'En attente')], default='pending', max_length=20)),
                ('current_period_start', models.DateTimeField()),
                ('current_period_end', models.DateTimeField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('cancelled_at', models.DateTimeField(blank=True, null=True)),
                ('rank', models.ForeignKey(limit_choices_to={'duration_type': 'monthly'}, on_delete=django.db.models.deletion.CASCADE, to='minecraft_app.rank')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='subscriptions', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('user', 'rank')},
            },
        ),
    ]
