version: '3.8'

networks:
  minecraft_network:
    driver: bridge

services:
  web:
    build:
      context: .
      dockerfile: Dockerfile
    command: >
      bash -c "python manage.py migrate &&
               python manage.py collectstatic --noinput &&
               gunicorn minecraft_site.wsgi:application --bind 0.0.0.0:8000"
    volumes:
      - .:/app
      - ./staticfiles:/app/staticfiles
      - ./media:/app/media
    ports:
      - "8000:8000"
    env_file:
      - .env
    depends_on:
      - db
    restart: always
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s
    # Ajout de cette ligne pour permettre l'accès à l'hôte
    extra_hosts:
      - "host.docker.internal:host-gateway"
    networks:
      - minecraft_network

  db:
    image: postgres:13
    env_file:
      - .env
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    networks:
      - minecraft_network

  nginx:
    image: nginx:latest
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
      - ./staticfiles:/var/www/static
      - ./media:/var/www/media
      - /etc/letsencrypt/live/novania.fr/fullchain.pem:/etc/nginx/ssl/fullchain.pem
      - /etc/letsencrypt/live/novania.fr/privkey.pem:/etc/nginx/ssl/privkey.pem
      - ./map:/var/www/map
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - web
    restart: always
    networks:
      - minecraft_network

volumes:
  postgres_data:
  minecraft_data:
